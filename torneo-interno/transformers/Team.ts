import { categoria, equipo, jugador, torneo } from "@prisma/client";
import { Category, Tournament, YouthPlayer } from "../models/Player";
import { TeamView, Team, TeamPlayer } from "../models/Team";
import { toCategory, toPlayer, toTournament } from "./Player";
import { AutoGeneratedTeam } from "../services/TeamAutoCreation";
import { v4 as uuidv4, v4 } from "uuid";
import { getRandomString } from "../services/Random";

export const toTeamPlayer = (player: YouthPlayer): TeamPlayer => {
  return {
    dni: player.player?.dni || "",
    name: player.player?.name || "",
    lastName: player.player?.lastName || "",
    position: player.position,
    level: player.level,
    canBeCaptain: player.captain,
  };
};

export const toTeam = (
  team: equipo,
  category: categoria,
  tournament: torneo,
  captain?: YouthPlayer,
  players?: YouthPlayer[]
): Team => {
  const partialTeam: Team = {
    id: team.id,
    name: team.nombre,
    category: toCategory(category),
    tournament: toTournament(tournament),
    players: players?.map((el) => toTeamPlayer(el)),
  };
  if (captain) {
    partialTeam.captain = toTeamPlayer(captain);
  }
  return partialTeam;
};

export const toTeamView = (autogenerated: AutoGeneratedTeam): TeamView => {
  return {
    id: uuidv4(),
    autogeneratedId: true,
    name: getRandomString(10),
    captain: autogenerated.captain || null,
    players: autogenerated.players,
  };
};

export const fromTeamToTeamView = (team: Team): TeamView => {
  return {
    id: team.id?.toString() || "",
    autogeneratedId: false,
    name: team.name,
    captain: team.captain || null,
    players: team.players || [],
  };
};
