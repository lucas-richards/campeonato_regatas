generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Partido {
  id                               Int       @id @default(autoincrement())
  gol_local                        Int?
  gol_visitante                    Int?
  local                            Int
  visitante                        Int
  timestamp                        String?   @default("CURRENT_TIMESTAMP") @db.VarChar(45)
  zona_id                          Int
  equipo_Partido_localToequipo     equipo    @relation("Partido_localToequipo", fields: [local], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Partido_equipo1")
  equipo_Partido_visitanteToequipo equipo    @relation("Partido_visitanteToequipo", fields: [visitante], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Partido_equipo2")
  zona                             zona      @relation(fields: [zona_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Partido_zona1")
  gol                              gol[]
  tarjeta                          tarjeta[]

  @@index([local], map: "fk_Partido_equipo1_idx")
  @@index([visitante], map: "fk_Partido_equipo2_idx")
  @@index([zona_id], map: "fk_Partido_zona1_idx")
}

model categoria {
  id            Int             @id @default(autoincrement())
  descripcion   String?         @db.VarChar(45)
  ano_inicio    DateTime?       @db.DateTime(0)
  ano_fin       DateTime?       @db.DateTime(0)
  timestamp     DateTime?       @default(now()) @db.Timestamp(0)
  novedad_id    Int?
  novedad       novedad?        @relation(fields: [novedad_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_categoria_novedad1")
  configuracion configuracion[]
  equipo        equipo[]
  jugador       jugador[]
  zona          zona[]
  sexo          String

  @@index([novedad_id], map: "fk_categoria_novedad1_idx")
}

model configuracion {
  id           Int       @id @default(autoincrement())
  descripcion  String?   @db.VarChar(45)
  habilitado   Int?      @db.TinyInt
  categoria_id Int
  categoria    categoria @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_configuracion_categoria1")

  @@index([categoria_id], map: "fk_configuracion_categoria1_idx")
}

model equipo {
  id                                Int              @id @default(autoincrement())
  nombre                            String?          @db.VarChar(45)
  torneo_id                         Int
  capitan                           Int
  categoria_id                      Int
  timestamp                         DateTime?        @default(now()) @db.Timestamp(0)
  zona_id                           Int
  Partido_Partido_localToequipo     Partido[]        @relation("Partido_localToequipo")
  Partido_Partido_visitanteToequipo Partido[]        @relation("Partido_visitanteToequipo")
  categoria                         categoria        @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_equipo_categoria1")
  jugador                           jugador          @relation(fields: [capitan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_equipo_jugador1")
  torneo                            torneo           @relation(fields: [torneo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_equipo_torneo1")
  zona                              zona             @relation(fields: [zona_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_equipo_zona1")
  jugador_equipo                    jugador_equipo[]

  @@index([categoria_id], map: "fk_equipo_categoria1_idx")
  @@index([capitan], map: "fk_equipo_jugador1_idx")
  @@index([torneo_id], map: "fk_equipo_torneo1_idx")
  @@index([zona_id], map: "fk_equipo_zona1_idx")
}

model gol {
  id         Int       @id @default(autoincrement())
  jugador_id Int
  Partido_id Int
  timestamp  DateTime? @default(now()) @db.Timestamp(0)
  Partido    Partido   @relation(fields: [Partido_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gol_Partido1")
  jugador    jugador   @relation(fields: [jugador_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gol_jugador1")

  @@index([Partido_id], map: "fk_gol_Partido1_idx")
  @@index([jugador_id], map: "fk_gol_jugador1_idx")
}

model jugador {
  id               Int                @id @default(autoincrement())
  dni              String?            @db.VarChar(45)
  nombre           String?            @db.VarChar(45)
  apellido         String?            @db.VarChar(45)
  mail             String?            @db.VarChar(45)
  telefono         String?            @db.VarChar(45)
  fecha_nacimiento DateTime?          @db.DateTime(0)
  timestamp        DateTime?          @default(now()) @db.Timestamp(0)
  sexo             String?            @db.VarChar(45)
  categoria_id     Int
  nivel_observado  Int
  equipo           equipo[]
  gol              gol[]
  categoria        categoria          @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_jugador_categoria1")
  nivel            nivel              @relation(fields: [nivel_observado], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_jugador_nivel1")
  jugador_equipo   jugador_equipo[]
  jugador_infantil jugador_infantil[]
  tarjeta          tarjeta[]

  @@index([categoria_id], map: "fk_jugador_categoria1_idx")
  @@index([nivel_observado], map: "fk_jugador_nivel1_idx")
}

model jugador_equipo {
  jugador_id        Int
  equipo_id         Int
  timestamp         DateTime? @default(now()) @db.Timestamp(0)
  jugador_equipo_id Int       @id @default(autoincrement())
  equipo            equipo    @relation(fields: [equipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_jugador_equipo_equipo1")
  jugador           jugador   @relation(fields: [jugador_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_jugador_equipo_jugador1")

  @@index([equipo_id], map: "fk_jugador_equipo_equipo1_idx")
  @@index([jugador_id], map: "fk_jugador_equipo_jugador1_idx")
}

model jugador_infantil {
  id                  Int             @id @default(autoincrement())
  telefono_emergencia String?         @db.VarChar(45)
  socio               Int?            @db.TinyInt
  puesto_id           Int
  nivel_id            Int
  capitan             Int             @db.TinyInt
  Torneo_id           Int
  responsable_id      Int
  habilitado          Int             @default(0) @db.TinyInt
  timestamp           DateTime        @default(now()) @db.Timestamp(0)
  jugador_id          Int
  tercer_hijo         Int?            @db.TinyInt
  monto_inscripcion   Float?
  torneo              torneo          @relation(fields: [Torneo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Inscripto_Torneo1")
  jugador             jugador         @relation(fields: [jugador_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Inscripto_jugador1")
  nivel               nivel           @relation(fields: [nivel_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Inscripto_nivel1")
  puesto              puesto          @relation(fields: [puesto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Inscripto_puesto")
  responsable         responsable     @relation(fields: [responsable_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Inscripto_responsable1")
  pago_infantil       pago_infantil[]

  @@index([Torneo_id], map: "fk_Inscripto_Torneo1_idx")
  @@index([jugador_id], map: "fk_Inscripto_jugador1_idx")
  @@index([nivel_id], map: "fk_Inscripto_nivel1_idx")
  @@index([puesto_id], map: "fk_Inscripto_puesto_idx")
  @@index([responsable_id], map: "fk_Inscripto_responsable1_idx")
}

model nivel {
  id               Int                @id @default(autoincrement())
  descripcion      String?            @db.VarChar(45)
  valor            Int?
  timestamp        DateTime           @default(now()) @db.Timestamp(0)
  jugador          jugador[]
  jugador_infantil jugador_infantil[]
}

model novedad {
  id        Int         @id @default(autoincrement())
  novedad   String?     @db.LongText
  categoria categoria[]
}

model pago {
  id             Int             @id @default(autoincrement())
  transferencia  Int?            @db.TinyInt
  comprobante    String?         @db.VarChar(45)
  timestamp      DateTime?       @default(now()) @db.Timestamp(0)
  responsable_id Int
  responsable    responsable     @relation(fields: [responsable_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pago_responsable1")
  pago_infantil  pago_infantil[]

  @@index([responsable_id], map: "fk_pago_responsable1_idx")
}

model pago_infantil {
  pago_id             Int
  jugador_infantil_id Int
  pago_infantil_id    Int              @id @default(autoincrement())
  jugador_infantil    jugador_infantil @relation(fields: [jugador_infantil_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pago_infantil_jugador_infantil1")
  pago                pago             @relation(fields: [pago_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pago_infantil_pago1")

  @@index([jugador_infantil_id], map: "fk_pago_infantil_jugador_infantil1_idx")
  @@index([pago_id], map: "fk_pago_infantil_pago1_idx")
}

model puesto {
  id               Int                @id @default(autoincrement())
  descripcion      String?            @db.VarChar(45)
  valor            Int?
  timestamp        DateTime?          @default(now()) @db.Timestamp(0)
  jugador_infantil jugador_infantil[]
}

model responsable {
  id               Int                @id @default(autoincrement())
  dni              String?            @db.VarChar(8)
  nombre           String?            @db.VarChar(45)
  apellido         String?            @db.VarChar(45)
  mail_contacto    String?            @db.VarChar(45)
  telefono         String?            @db.VarChar(45)
  timestamp        DateTime           @default(now()) @db.Timestamp(0)
  jugador_infantil jugador_infantil[]
  pago             pago[]
}

model socio {
  dni String @id @db.VarChar(9)
}

model tarifas {
  id           Int       @id @default(autoincrement())
  socio        Int?      @db.TinyInt
  valor        Int?
  juvenil      Int?      @db.TinyInt
  momento      Int?
  torneo_id    Int
  fecha_inicio DateTime? @db.DateTime(0)
  fecha_cierre DateTime? @db.DateTime(0)
  timestamp    DateTime? @default(now()) @db.Timestamp(0)
  torneo       torneo    @relation(fields: [torneo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tarifas_torneo1")

  @@index([torneo_id], map: "fk_tarifas_torneo1_idx")
}

model tarjeta {
  id         Int       @id
  jugador_id Int
  Partido_id Int
  amarilla   Int?      @db.TinyInt
  timestamp  DateTime? @default(now()) @db.Timestamp(0)
  Partido    Partido   @relation(fields: [Partido_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tarjeta_Partido1")
  jugador    jugador   @relation(fields: [jugador_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tarjeta_jugador1")

  @@index([Partido_id], map: "fk_tarjeta_Partido1_idx")
  @@index([jugador_id], map: "fk_tarjeta_jugador1_idx")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model timestamps {
  create_time DateTime? @default(now()) @db.Timestamp(0)
  update_time DateTime? @db.Timestamp(0)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model timestamps_1 {
  create_time DateTime? @default(now()) @db.Timestamp(0)
  update_time DateTime? @db.Timestamp(0)

  @@ignore
}

model torneo {
  id               Int                @id @default(autoincrement())
  ano_torneo       String?            @db.VarChar(4)
  timestamp        DateTime           @default(now()) @db.Timestamp(0)
  equipo           equipo[]
  jugador_infantil jugador_infantil[]
  tarifas          tarifas[]
}

model usuario {
  id       Int     @id @default(autoincrement())
  username String? @db.VarChar(45)
  password String? @db.VarChar(45)
}

model zona {
  id           Int       @id @default(autoincrement())
  descripcion  String?   @db.VarChar(45)
  categoria_id Int
  Partido      Partido[]
  equipo       equipo[]
  categoria    categoria @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_zona_categoria1")

  @@index([categoria_id], map: "fk_zona_categoria1_idx")
}
